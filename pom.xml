<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>no.ntnu.iir.bluej.extensions.linting.core</groupId>
  <artifactId>bluej-linting-core</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <name>bluej-linting-core</name>
  <url>https://github.com/NTNU-IE-IIR/BlueJ-Linting-Core</url>

  <!--
  BlueJ 5.0.3 uses the following versions of Java and JavaFX:
      Java: 11.0.14.1
      JavaFX: 11.0.13.1+1

  Note on <scope>provided</scope> in the dependency section:
         We use this scope to mark dependencies that should be provided at runtime by JDK or a container.
         For BluJ: JavaFX is already bundled with BlueJ, hence "provided" in this project.
         (https://www.baeldung.com/maven-dependency-scopes)
  -->

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <!-- Use a JavaFX version closest to the version used by BlueJ (11.0.13.1 is not available on the Maven repo) -->
    <javafx.version>12</javafx.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>31.0.1-jre</version>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-web</artifactId>
      <version>${javafx.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>bluej</groupId>
      <artifactId>bluejext2</artifactId>
      <type>jar</type>
      <version>3.3</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <repositories>
    <repository>
      <!--
      Set up the folder "lib" in this project as a dependency repository.
      -->
      <id>local_repository</id>
      <name>Repository in the projects lib directory</name>
      <layout>default</layout>
      <url>file:///${project.basedir}/lib</url>
      <releases><enabled>true</enabled></releases>
    </repository>
  </repositories>
</project>
